NODECOORDINATOR

check executed operations or retrieve generated Java compilation errors
eval and out cannot specify node coordinators

with explicit physical locality

node Receiver {
	val myLoc = new PhysicalLocality("tcp-127.0.0.1:9999")
	while (true) {
		val remote = new PhysicalLocality
		accept(myLoc, remote)
	}
}

net Net physical {

	node L1 [...] {...}
	node L2 [...] {...}

}

automatically defines a field in the Net class of type LogicalLocality

after starting the nodes, in the net, also modifies their environments as specified in the DSL

... node L1 [ next -> L2 ]

"next" defines a LogicalLocality in the node class and L2 must be a Locality (e.g., reference to an existing one)

the compiled code will generate

addToNodeEnvironment(new LogicalLocality("next"), getPhysical(L2))

PROCCALL

KlavaProcess P_@procname@ = new @procname@();
@nodename@.addProcess( P_@procname@ ) ;
P_@procname@.join();

NEWLOC

HIERARCHICAL

RUN AS

UTILS

static methods for creating logical locality and physical locality

