/**
 * generated by Xtext 2.25.0
 */
package xklaim;

import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.xbase.compiler.XbaseCompiler;
import org.eclipse.xtext.xbase.scoping.batch.ImplicitlyImportedFeatures;
import org.eclipse.xtext.xbase.typesystem.computation.ITypeComputer;

import com.google.inject.Binder;
import com.google.inject.name.Names;

import xklaim.compiler.XklaimXbaseCompiler;
import xklaim.scoping.XklaimImplicitlyImportedFeatures;
import xklaim.scoping.XklaimImportedNamespaceScopeProvider;
import xklaim.typesystem.XklaimTypeComputer;

/**
 * Use this class to register components to be used at runtime / without the
 * Equinox extension registry.
 */
public class XklaimRuntimeModule extends AbstractXklaimRuntimeModule {
	@Override
	public Class<? extends ITypeComputer> bindITypeComputer() {
		return XklaimTypeComputer.class;
	}

	public Class<? extends XbaseCompiler> bindXbaseCompiler() {
		return XklaimXbaseCompiler.class;
	}

	public Class<? extends ImplicitlyImportedFeatures> bindImplicitlyImportedFeatures() {
		return XklaimImplicitlyImportedFeatures.class;
	}

	@Override
	public void configureIScopeProviderDelegate(final Binder binder) {
		binder.bind(IScopeProvider.class)
				.annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE))
				.to(XklaimImportedNamespaceScopeProvider.class);
	}
}
